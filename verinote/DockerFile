# Use a lightweight Node.js base image
FROM node:18-alpine AS frontend

# Set working directory for the frontend
WORKDIR /app/frontend

# Copy frontend files
COPY . .

# Install frontend dependencies (assuming package.json is in the root)
RUN npm install

# Build the frontend for production
RUN npm run build

# Use a Python base image for the backend
FROM python:3.9-slim AS backend

# Set working directory for the backend
WORKDIR /app/backend

# Copy backend files (assuming api directory is at the root)
COPY api/ .

# Install backend dependencies
RUN pip install -r requirements.txt  # Replace with your actual requirements file name

# Expose backend port (assuming Flask app runs on port 5000)
EXPOSE 5000

# Combine frontend and backend images in a final image
FROM nginx:alpine AS final

# Copy built frontend files
COPY --from=frontend /app/frontend/build /usr/share/nginx/html

# Set default location for serving static files
RUN echo "location / { root /usr/share/nginx/html; index index.html index.htm; }" > /etc/nginx/conf.d/default.conf

# Start Gunicorn to serve the Flask backend
CMD ["gunicorn", "--bind", "0.0.0.0:5000", "wsgi:application"]
